<Type Name="AddInsOptionsPanel+AddInsPanelWidget" FullName="MonoDevelop.Ide.Gui.OptionPanels.AddInsOptionsPanel+AddInsPanelWidget">
  <TypeSignature Language="C#" Value="public class AddInsPanelWidget : MonoDevelop.Components.GladeWidgetExtract" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Ide</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Components.GladeWidgetExtract</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInsPanelWidget ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="lookCheck">
      <MemberSignature Language="C#" Value="public Gtk.CheckButton lookCheck;" />
      <MemberType>Field</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Glade.Widget(Name=null, Specified=False)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.CheckButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valueSpin">
      <MemberSignature Language="C#" Value="public Gtk.SpinButton valueSpin;" />
      <MemberType>Field</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Glade.Widget(Name=null, Specified=False)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.SpinButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="periodCombo">
      <MemberSignature Language="C#" Value="public Gtk.ComboBox periodCombo;" />
      <MemberType>Field</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Glade.Widget(Name=null, Specified=False)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.ComboBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Store">
      <MemberSignature Language="C#" Value="public void Store ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManageClicked">
      <MemberSignature Language="C#" Value="public void OnManageClicked (object s, EventArgs a);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Object" />
        <Parameter Name="a" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCheckToggled">
      <MemberSignature Language="C#" Value="public void OnCheckToggled (object s, EventArgs a);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Object" />
        <Parameter Name="a" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
