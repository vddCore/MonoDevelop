<Type Name="AbstractBaseViewContent" FullName="MonoDevelop.Ide.Gui.AbstractBaseViewContent">
  <TypeSignature Language="C#" Value="public abstract class AbstractBaseViewContent : MonoDevelop.Ide.Gui.IBaseViewContent" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Ide</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoDevelop.Ide.Gui.IBaseViewContent</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBaseViewContent ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="WorkbenchWindowChanged">
      <MemberSignature Language="C#" Value="public event EventHandler WorkbenchWindowChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RedrawContent">
      <MemberSignature Language="C#" Value="public virtual void RedrawContent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnWorkbenchWindowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnWorkbenchWindowChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="System.EventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public abstract Gtk.Widget Control { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>Gtk.Widget</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="WorkbenchWindow">
      <MemberSignature Language="C#" Value="public virtual MonoDevelop.Ide.Gui.IWorkbenchWindow WorkbenchWindow { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Ide.Gui.IWorkbenchWindow</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="TabPageLabel">
      <MemberSignature Language="C#" Value="public virtual string TabPageLabel { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="CanReuseView"><MemberSignature Language="C#" Value="public virtual bool CanReuseView (string fileName);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue><Parameters><Parameter Name="fileName" Type="System.String" /></Parameters><Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetContent"><MemberSignature Language="C#" Value="public virtual object GetContent (Type type);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Object</ReturnType></ReturnValue><Parameters><Parameter Name="type" Type="System.Type" /></Parameters><Docs><param name="type">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
