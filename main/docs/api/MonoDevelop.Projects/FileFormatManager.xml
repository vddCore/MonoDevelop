<Type Name="FileFormatManager" FullName="MonoDevelop.Projects.FileFormatManager">
  <TypeSignature Language="C#" Value="public class FileFormatManager" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileFormatManager ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RegisterFileFormat">
      <MemberSignature Language="C#" Value="public void RegisterFileFormat (MonoDevelop.Projects.IFileFormat format);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="format" Type="MonoDevelop.Projects.IFileFormat" /></Parameters>
      <Docs><param name="format">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    
  <Member MemberName="GetAllFileFormats"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.IFileFormat[] GetAllFileFormats ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.IFileFormat[]</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetFileFormats"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.IFileFormat[] GetFileFormats (string fileName);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.IFileFormat[]</ReturnType></ReturnValue><Parameters><Parameter Name="fileName" Type="System.String" /></Parameters><Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetFileFormatsForObject"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.IFileFormat[] GetFileFormatsForObject (object obj);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.IFileFormat[]</ReturnType></ReturnValue><Parameters><Parameter Name="obj" Type="System.Object" /></Parameters><Docs><param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="UnregisterFileFormat"><MemberSignature Language="C#" Value="public void UnregisterFileFormat (MonoDevelop.Projects.IFileFormat format);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="format" Type="MonoDevelop.Projects.IFileFormat" /></Parameters><Docs><param name="format">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
