<Type Name="Project" FullName="MonoDevelop.Projects.Project">
  <TypeSignature Language="C#" Value="public abstract class Project : MonoDevelop.Projects.CombineEntry" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Projects.CombineEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoDevelop.Projects.Serialization.DataItem(FallbackType=typeof(MonoDevelop.Projects.UnknownProject))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoDevelop.Projects.Serialization.DataInclude(typeof(MonoDevelop.Projects.ProjectFile))</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileRemovedFromProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileRemovedFromProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileAddedToProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileAddedToProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileChangedInProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileChangedInProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileRenamedInProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileRenamedEventHandler FileRenamedInProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileRenamedEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ReferenceRemovedFromProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectReferenceEventHandler ReferenceRemovedFromProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ReferenceAddedToProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectReferenceEventHandler ReferenceAddedToProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="description">
      <MemberSignature Language="C#" Value="protected string description;" />
      <MemberType>Field</MemberType>
      <Attributes><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("Description", DefaultValue="")</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="newFileSearch">
      <MemberSignature Language="C#" Value="protected MonoDevelop.Projects.NewFileSearch newFileSearch;" />
      <MemberType>Field</MemberType>
      <Attributes><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("newfilesearch", DefaultValue=MonoDevelop.Projects.NewFileSearch.None)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>MonoDevelop.Projects.NewFileSearch</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="projectReferences">
      <MemberSignature Language="C#" Value="protected MonoDevelop.Projects.ProjectReferenceCollection projectReferences;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceCollection</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="IsFileInProject">
      <MemberSignature Language="C#" Value="public bool IsFileInProject (string filename);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="filename" Type="System.String" /></Parameters>
      <Docs><param name="filename">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetProjectFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectFile GetProjectFile (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFile</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="IsCompileable">
      <MemberSignature Language="C#" Value="public virtual bool IsCompileable (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="LoadProject">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Project LoadProject (string filename, MonoDevelop.Core.IProgressMonitor monitor);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Project</ReturnType></ReturnValue>
      <Parameters><Parameter Name="filename" Type="System.String" /><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /></Parameters>
      <Docs><param name="filename">To be added.</param><param name="monitor">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="CopyReferencesToOutputPath">
      <MemberSignature Language="C#" Value="public void CopyReferencesToOutputPath (bool force);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="force" Type="System.Boolean" /></Parameters>
      <Docs><param name="force">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectReference AddReference (string filename);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReference</ReturnType></ReturnValue>
      <Parameters><Parameter Name="filename" Type="System.String" /></Parameters>
      <Docs><param name="filename">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectFile AddFile (string filename, MonoDevelop.Projects.BuildAction action);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFile</ReturnType></ReturnValue>
      <Parameters><Parameter Name="filename" Type="System.String" /><Parameter Name="action" Type="MonoDevelop.Projects.BuildAction" /></Parameters>
      <Docs><param name="filename">To be added.</param><param name="action">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (MonoDevelop.Projects.ProjectFile projectFile);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="projectFile" Type="MonoDevelop.Projects.ProjectFile" /></Parameters>
      <Docs><param name="projectFile">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ICompilerResult Build (MonoDevelop.Core.IProgressMonitor monitor, bool buildReferences);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ICompilerResult</ReturnType></ReturnValue>
      <Parameters><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /><Parameter Name="buildReferences" Type="System.Boolean" /></Parameters>
      <Docs><param name="monitor">To be added.</param><param name="buildReferences">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="DoBuild">
      <MemberSignature Language="C#" Value="protected virtual MonoDevelop.Projects.ICompilerResult DoBuild (MonoDevelop.Core.IProgressMonitor monitor);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ICompilerResult</ReturnType></ReturnValue>
      <Parameters><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /></Parameters>
      <Docs><param name="monitor">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="DoExecute">
      <MemberSignature Language="C#" Value="protected virtual void DoExecute (MonoDevelop.Core.IProgressMonitor monitor, MonoDevelop.Projects.ExecutionContext context);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /><Parameter Name="context" Type="MonoDevelop.Projects.ExecutionContext" /></Parameters>
      <Docs><param name="monitor">To be added.</param><param name="context">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetOutputFileName">
      <MemberSignature Language="C#" Value="public virtual string GetOutputFileName ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CheckNeedsBuild">
      <MemberSignature Language="C#" Value="protected virtual void CheckNeedsBuild ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetLastBuildTime">
      <MemberSignature Language="C#" Value="protected virtual DateTime GetLastBuildTime ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.DateTime</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileRemovedFromProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileRemovedFromProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileAddedToProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileAddedToProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnReferenceRemovedFromProject">
      <MemberSignature Language="C#" Value="protected virtual void OnReferenceRemovedFromProject (MonoDevelop.Projects.ProjectReferenceEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectReferenceEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnReferenceAddedToProject">
      <MemberSignature Language="C#" Value="protected virtual void OnReferenceAddedToProject (MonoDevelop.Projects.ProjectReferenceEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectReferenceEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileChangedInProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileChangedInProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileRenamedInProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileRenamedInProject (MonoDevelop.Projects.ProjectFileRenamedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileRenamedEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>System.ComponentModel.DefaultValue("")</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ProjectFiles">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectFileCollection ProjectFiles { get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("File", Scope=1)</AttributeName></Attribute><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("Contents")</AttributeName></Attribute><Attribute><AttributeName>System.ComponentModel.Browsable(false)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileCollection</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ProjectReferences">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectReferenceCollection ProjectReferences { get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("References")</AttributeName></Attribute><Attribute><AttributeName>System.ComponentModel.Browsable(false)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceCollection</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="NewFileSearch">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.NewFileSearch NewFileSearch { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>System.ComponentModel.DefaultValue(MonoDevelop.Projects.NewFileSearch.None)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>MonoDevelop.Projects.NewFileSearch</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="ProjectType">
      <MemberSignature Language="C#" Value="public abstract string ProjectType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    
  <Member MemberName="AddDirectory"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.ProjectFile AddDirectory (string relativePath);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFile</ReturnType></ReturnValue><Parameters><Parameter Name="relativePath" Type="System.String" /></Parameters><Docs><param name="relativePath">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="Ambience"><MemberSignature Language="C#" Value="public virtual MonoDevelop.Projects.Ambience.Ambience Ambience { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Ambience.Ambience</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="DefaultNamespace"><MemberSignature Language="C#" Value="public string DefaultNamespace { set; get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="defaultNamespace"><MemberSignature Language="C#" Value="protected string defaultNamespace;" /><MemberType>Field</MemberType><Attributes><Attribute><AttributeName>MonoDevelop.Projects.Serialization.ItemProperty("DefaultNamespace", DefaultValue="")</AttributeName></Attribute></Attributes><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="FilePropertyChangedInProject"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FilePropertyChangedInProject;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetReferenceDeployFiles"><MemberSignature Language="C#" Value="public string[] GetReferenceDeployFiles (bool force);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue><Parameters><Parameter Name="force" Type="System.Boolean" /></Parameters><Docs><param name="force">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnFilePropertyChangedInProject"><MemberSignature Language="C#" Value="protected virtual void OnFilePropertyChangedInProject (MonoDevelop.Projects.ProjectFileEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="SupportedLanguages"><MemberSignature Language="C#" Value="public virtual string[] SupportedLanguages { get; };" /><MemberType>Property</MemberType><Attributes><Attribute><AttributeName>System.ComponentModel.Browsable(false)</AttributeName></Attribute></Attributes><ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
