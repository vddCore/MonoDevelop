<Type Name="Combine" FullName="MonoDevelop.Projects.Combine">
  <TypeSignature Language="C#" Value="public class Combine : MonoDevelop.Projects.CombineEntry" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Projects.CombineEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoDevelop.Projects.Serialization.DataInclude(typeof(MonoDevelop.Projects.CombineConfiguration))</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Combine ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartupPropertyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StartupPropertyChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="EntryAdded">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryChangeEventHandler EntryAdded;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryChangeEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="EntryRemoved">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryChangeEventHandler EntryRemoved;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryChangeEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileAddedToProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileAddedToProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileRemovedFromProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileRemovedFromProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileChangedInProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FileChangedInProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FileRenamedInProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileRenamedEventHandler FileRenamedInProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileRenamedEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ReferenceAddedToProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectReferenceEventHandler ReferenceAddedToProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ReferenceRemovedFromProject">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectReferenceEventHandler ReferenceRemovedFromProject;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.ProjectReferenceEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="AddEntry">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntry AddEntry (string filename, MonoDevelop.Core.IProgressMonitor monitor);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntry</ReturnType></ReturnValue>
      <Parameters><Parameter Name="filename" Type="System.String" /><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /></Parameters>
      <Docs><param name="filename">To be added.</param><param name="monitor">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RemoveEntry">
      <MemberSignature Language="C#" Value="public void RemoveEntry (MonoDevelop.Projects.CombineEntry entry);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="entry" Type="MonoDevelop.Projects.CombineEntry" /></Parameters>
      <Docs><param name="entry">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetAllConfigurations">
      <MemberSignature Language="C#" Value="public string[] GetAllConfigurations ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SetAllConfigurations">
      <MemberSignature Language="C#" Value="public void SetAllConfigurations (string configName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="configName" Type="System.String" /></Parameters>
      <Docs><param name="configName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetAllProjects">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllProjects ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetAllBuildableEntries">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllBuildableEntries (string configuration);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue>
      <Parameters><Parameter Name="configuration" Type="System.String" /></Parameters>
      <Docs><param name="configuration">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="FindProject">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Project FindProject (string projectName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Project</ReturnType></ReturnValue>
      <Parameters><Parameter Name="projectName" Type="System.String" /></Parameters>
      <Docs><param name="projectName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RemoveFileFromProjects">
      <MemberSignature Language="C#" Value="public void RemoveFileFromProjects (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RenameFileInProjects">
      <MemberSignature Language="C#" Value="public void RenameFileInProjects (string sourceFile, string targetFile);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="sourceFile" Type="System.String" /><Parameter Name="targetFile" Type="System.String" /></Parameters>
      <Docs><param name="sourceFile">To be added.</param><param name="targetFile">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="OnStartupPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStartupPropertyChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="System.EventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    
    <Member MemberName="OnFileRemovedFromProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileRemovedFromProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileChangedInProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileChangedInProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileAddedToProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileAddedToProject (MonoDevelop.Projects.ProjectFileEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnFileRenamedInProject">
      <MemberSignature Language="C#" Value="protected virtual void OnFileRenamedInProject (MonoDevelop.Projects.ProjectFileRenamedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileRenamedEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnReferenceRemovedFromProject">
      <MemberSignature Language="C#" Value="protected virtual void OnReferenceRemovedFromProject (MonoDevelop.Projects.ProjectReferenceEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectReferenceEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OnReferenceAddedToProject">
      <MemberSignature Language="C#" Value="protected virtual void OnReferenceAddedToProject (MonoDevelop.Projects.ProjectReferenceEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectReferenceEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection Entries { get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>System.ComponentModel.Browsable(false)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartupEntry">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntry StartupEntry { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntry</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SingleStartupProject">
      <MemberSignature Language="C#" Value="public bool SingleStartupProject { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes><Attribute><AttributeName>System.ComponentModel.Browsable(false)</AttributeName></Attribute></Attributes>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CombineExecuteDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList CombineExecuteDefinitions { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Collections.ArrayList</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public string OutputDirectory { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="EntryAddedToCombine"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryChangeEventHandler EntryAddedToCombine;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryChangeEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="EntryModified"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryEventHandler EntryModified;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="EntryRemovedFromCombine"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryChangeEventHandler EntryRemovedFromCombine;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryChangeEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="EntrySaved"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.CombineEntryEventHandler EntrySaved;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="FilePropertyChangedInProject"><MemberSignature Language="C#" Value="public event MonoDevelop.Projects.ProjectFileEventHandler FilePropertyChangedInProject;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.ProjectFileEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAllBuildableEntries"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllBuildableEntries (string configuration, bool topologicalSort);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue><Parameters><Parameter Name="configuration" Type="System.String" /><Parameter Name="topologicalSort" Type="System.Boolean" /></Parameters><Docs><param name="configuration">To be added.</param><param name="topologicalSort">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAllEntries"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllEntries ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAllEntries"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllEntries (Type type);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue><Parameters><Parameter Name="type" Type="System.Type" /></Parameters><Docs><param name="type">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAllProjects"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntryCollection GetAllProjects (bool topologicalSort);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntryCollection</ReturnType></ReturnValue><Parameters><Parameter Name="topologicalSort" Type="System.Boolean" /></Parameters><Docs><param name="topologicalSort">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetProjectContainingFile"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Project GetProjectContainingFile (string fileName);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Project</ReturnType></ReturnValue><Parameters><Parameter Name="fileName" Type="System.String" /></Parameters><Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="IsRoot"><MemberSignature Language="C#" Value="public virtual bool IsRoot { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnEntryAdded"><MemberSignature Language="C#" Value="protected virtual void OnEntryAdded (MonoDevelop.Projects.CombineEntryChangeEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.CombineEntryChangeEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnEntryModified"><MemberSignature Language="C#" Value="protected virtual void OnEntryModified (MonoDevelop.Projects.CombineEntryEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.CombineEntryEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnEntryRemoved"><MemberSignature Language="C#" Value="protected virtual void OnEntryRemoved (MonoDevelop.Projects.CombineEntryChangeEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.CombineEntryChangeEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnEntrySaved"><MemberSignature Language="C#" Value="protected virtual void OnEntrySaved (MonoDevelop.Projects.CombineEntryEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.CombineEntryEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnFilePropertyChangedInProject"><MemberSignature Language="C#" Value="protected virtual void OnFilePropertyChangedInProject (MonoDevelop.Projects.ProjectFileEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Projects.ProjectFileEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="ReloadEntry"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.CombineEntry ReloadEntry (MonoDevelop.Core.IProgressMonitor monitor, MonoDevelop.Projects.CombineEntry entry);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.CombineEntry</ReturnType></ReturnValue><Parameters><Parameter Name="monitor" Type="MonoDevelop.Core.IProgressMonitor" /><Parameter Name="entry" Type="MonoDevelop.Projects.CombineEntry" /></Parameters><Docs><param name="monitor">To be added.</param><param name="entry">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
