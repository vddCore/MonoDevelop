<Type Name="SystemAssemblyService" FullName="MonoDevelop.Core.SystemAssemblyService">
  <TypeSignature Language="C#" Value="public class SystemAssemblyService : MonoDevelop.Core.AbstractService" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Core</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Core.AbstractService</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SystemAssemblyService ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="GetAssemblyLocation">
      <MemberSignature Language="C#" Value="public string GetAssemblyLocation (string assemblyName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="assemblyName" Type="System.String" /></Parameters>
      <Docs><param name="assemblyName">Full or partial name of the assembly.</param><summary>Gets the path of an assembly.</summary><returns>The path to the assembly.</returns><remarks>The assembly is not loaded into the current process. It may return a path to the GAC if the assembly is loaded from the GAC.</remarks></Docs>
    </Member>
    
    <Member MemberName="GetAssemblyFullName">
      <MemberSignature Language="C#" Value="public string GetAssemblyFullName (string assemblyName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="assemblyName" Type="System.String" /></Parameters>
      <Docs><param name="assemblyName">Partial name of an assembly.</param><summary>Returns the full name of an assembly.</summary><returns>The full name of the provided assembly name.</returns><remarks>The assembly is not loaded in the executing process.</remarks></Docs>
    </Member>
  <Member MemberName="FindInstalledAssembly"><MemberSignature Language="C#" Value="public string FindInstalledAssembly (string fullname);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Parameters><Parameter Name="fullname" Type="System.String" /></Parameters><Docs><param name="fullname">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAssemblyFullNames"><MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; GetAssemblyFullNames ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAssemblyNameForVersion"><MemberSignature Language="C#" Value="public string GetAssemblyNameForVersion (string fullName, MonoDevelop.Core.ClrVersion targetVersion);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Parameters><Parameter Name="fullName" Type="System.String" /><Parameter Name="targetVersion" Type="MonoDevelop.Core.ClrVersion" /></Parameters><Docs><param name="fullName">To be added.</param><param name="targetVersion">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetAssemblyPaths"><MemberSignature Language="C#" Value="public System.Collections.ICollection GetAssemblyPaths (MonoDevelop.Core.ClrVersion clrVersion);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Collections.ICollection</ReturnType></ReturnValue><Parameters><Parameter Name="clrVersion" Type="MonoDevelop.Core.ClrVersion" /></Parameters><Docs><param name="clrVersion">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetPackage"><MemberSignature Language="C#" Value="public MonoDevelop.Core.SystemPackage GetPackage (string name);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.SystemPackage</ReturnType></ReturnValue><Parameters><Parameter Name="name" Type="System.String" /></Parameters><Docs><param name="name">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetPackage"><MemberSignature Language="C#" Value="public MonoDevelop.Core.SystemPackage GetPackage (string name, string version);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.SystemPackage</ReturnType></ReturnValue><Parameters><Parameter Name="name" Type="System.String" /><Parameter Name="version" Type="System.String" /></Parameters><Docs><param name="name">To be added.</param><param name="version">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetPackageFromFullName"><MemberSignature Language="C#" Value="public MonoDevelop.Core.SystemPackage GetPackageFromFullName (string fullname);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.SystemPackage</ReturnType></ReturnValue><Parameters><Parameter Name="fullname" Type="System.String" /></Parameters><Docs><param name="fullname">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetPackageFromPath"><MemberSignature Language="C#" Value="public MonoDevelop.Core.SystemPackage GetPackageFromPath (string path);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.SystemPackage</ReturnType></ReturnValue><Parameters><Parameter Name="path" Type="System.String" /></Parameters><Docs><param name="path">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetPackages"><MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;MonoDevelop.Core.SystemPackage&gt; GetPackages ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Collections.Generic.ICollection&lt;MonoDevelop.Core.SystemPackage&gt;</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetSupportedClrVersions"><MemberSignature Language="C#" Value="public MonoDevelop.Core.ClrVersion[] GetSupportedClrVersions ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.ClrVersion[]</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="PackagesChanged"><MemberSignature Language="C#" Value="public event EventHandler PackagesChanged;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="ParseAssemblyName"><MemberSignature Language="C#" Value="public System.Reflection.AssemblyName ParseAssemblyName (string fullname);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Reflection.AssemblyName</ReturnType></ReturnValue><Parameters><Parameter Name="fullname" Type="System.String" /></Parameters><Docs><param name="fullname">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="RegisterPackage"><MemberSignature Language="C#" Value="public MonoDevelop.Core.SystemPackage RegisterPackage (string name, string version, string description, MonoDevelop.Core.ClrVersion targetVersion, string gacRoot, string[] assemblyFiles);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.SystemPackage</ReturnType></ReturnValue><Parameters><Parameter Name="name" Type="System.String" /><Parameter Name="version" Type="System.String" /><Parameter Name="description" Type="System.String" /><Parameter Name="targetVersion" Type="MonoDevelop.Core.ClrVersion" /><Parameter Name="gacRoot" Type="System.String" /><Parameter Name="assemblyFiles" Type="System.String[]"><Attributes><Attribute><AttributeName>System.ParamArray</AttributeName></Attribute></Attributes></Parameter></Parameters><Docs><param name="name">To be added.</param><param name="version">To be added.</param><param name="description">To be added.</param><param name="targetVersion">To be added.</param><param name="gacRoot">To be added.</param><param name="assemblyFiles">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="UnregisterPackage"><MemberSignature Language="C#" Value="public void UnregisterPackage (string name, string version);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="name" Type="System.String" /><Parameter Name="version" Type="System.String" /></Parameters><Docs><param name="name">To be added.</param><param name="version">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>Utility class that provides methods for getting information about assemblies.</summary>
    <remarks>All methods of this class use an external process to load assembly information, so there is no danger of conflicts with assemblies already loaded in the current process.</remarks>
  </Docs>
</Type>
