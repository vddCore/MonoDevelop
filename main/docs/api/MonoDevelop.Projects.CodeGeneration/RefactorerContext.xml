<Type Name="RefactorerContext" FullName="MonoDevelop.Projects.CodeGeneration.RefactorerContext">
  <TypeSignature Language="C#" Value="public sealed class RefactorerContext" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Text.IEditableTextFile GetFile (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Text.IEditableTextFile</ReturnType></ReturnValue>
      <Parameters><Parameter Name="name" Type="System.String" /></Parameters>
      <Docs><param name="name">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ParserContext">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParserContext ParserContext { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParserContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="TypeNameResolver"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.ITypeNameResolver TypeNameResolver { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ITypeNameResolver</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
