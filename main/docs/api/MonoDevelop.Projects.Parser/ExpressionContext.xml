<Type Name="ExpressionContext" FullName="MonoDevelop.Projects.Parser.ExpressionContext">
  <TypeSignature Language="C#" Value="public abstract class ExpressionContext" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionContext ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="readOnly">
      <MemberSignature Language="C#" Value="protected bool readOnly;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext Default;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext Namespace;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Importable">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext Importable;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext Type;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ObjectCreation">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext ObjectCreation;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext Attribute;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext.InterfaceExpressionContext Interface;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext+InterfaceExpressionContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ShowEntry">
      <MemberSignature Language="C#" Value="public abstract bool ShowEntry (object o);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="o" Type="System.Object" /></Parameters>
      <Docs><param name="o">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="TypeDerivingFrom">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext TypeDerivingFrom (MonoDevelop.Projects.Parser.IClass baseClass, bool isObjectCreation);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Parameters><Parameter Name="baseClass" Type="MonoDevelop.Projects.Parser.IClass" /><Parameter Name="isObjectCreation" Type="System.Boolean" /></Parameters>
      <Docs><param name="baseClass">To be added.</param><param name="isObjectCreation">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext op_BitwiseOr (MonoDevelop.Projects.Parser.ExpressionContext a, MonoDevelop.Projects.Parser.ExpressionContext b);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Parameters><Parameter Name="a" Type="MonoDevelop.Projects.Parser.ExpressionContext" /><Parameter Name="b" Type="MonoDevelop.Projects.Parser.ExpressionContext" /></Parameters>
      <Docs><param name="a">To be added.</param><param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext op_BitwiseAnd (MonoDevelop.Projects.Parser.ExpressionContext a, MonoDevelop.Projects.Parser.ExpressionContext b);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Parameters><Parameter Name="a" Type="MonoDevelop.Projects.Parser.ExpressionContext" /><Parameter Name="b" Type="MonoDevelop.Projects.Parser.ExpressionContext" /></Parameters>
      <Docs><param name="a">To be added.</param><param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static MonoDevelop.Projects.Parser.ExpressionContext op_ExclusiveOr (MonoDevelop.Projects.Parser.ExpressionContext a, MonoDevelop.Projects.Parser.ExpressionContext b);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ExpressionContext</ReturnType></ReturnValue>
      <Parameters><Parameter Name="a" Type="MonoDevelop.Projects.Parser.ExpressionContext" /><Parameter Name="b" Type="MonoDevelop.Projects.Parser.ExpressionContext" /></Parameters>
      <Docs><param name="a">To be added.</param><param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="IsObjectCreation">
      <MemberSignature Language="C#" Value="public virtual bool IsObjectCreation { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SuggestedItem">
      <MemberSignature Language="C#" Value="public object SuggestedItem { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Object</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
