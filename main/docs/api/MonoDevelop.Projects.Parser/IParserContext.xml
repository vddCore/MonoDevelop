<Type Name="IParserContext" FullName="MonoDevelop.Projects.Parser.IParserContext">
  <TypeSignature Language="C#" Value="public interface IParserContext" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Members>
    <Member MemberName="GetExpressionFinder">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IExpressionFinder GetExpressionFinder (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IExpressionFinder</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ParseFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParseInformation ParseFile (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParseInformation</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ParseFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParseInformation ParseFile (string fileName, string fileContent);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParseInformation</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /><Parameter Name="fileContent" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><param name="fileContent">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetParseInformation">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParseInformation GetParseInformation (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParseInformation</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetClass">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass GetClass (string typeName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue>
      <Parameters><Parameter Name="typeName" Type="System.String" /></Parameters>
      <Docs><param name="typeName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetClassList">
      <MemberSignature Language="C#" Value="public string[] GetClassList (string subNameSpace, bool includeReferences);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Parameters><Parameter Name="subNameSpace" Type="System.String" /><Parameter Name="includeReferences" Type="System.Boolean" /></Parameters>
      <Docs><param name="subNameSpace">To be added.</param><param name="includeReferences">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetNamespaceList">
      <MemberSignature Language="C#" Value="public string[] GetNamespaceList (string subNameSpace);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Parameters><Parameter Name="subNameSpace" Type="System.String" /></Parameters>
      <Docs><param name="subNameSpace">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="NamespaceExists">
      <MemberSignature Language="C#" Value="public bool NamespaceExists (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="name" Type="System.String" /></Parameters>
      <Docs><param name="name">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SearchNamespace">
      <MemberSignature Language="C#" Value="public string SearchNamespace (MonoDevelop.Projects.Parser.IUsing iusing, string partitialNamespaceName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialNamespaceName" Type="System.String" /></Parameters>
      <Docs><param name="iusing">To be added.</param><param name="partitialNamespaceName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass SearchType (MonoDevelop.Projects.Parser.IUsing iusing, string partitialTypeName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue>
      <Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialTypeName" Type="System.String" /></Parameters>
      <Docs><param name="iusing">To be added.</param><param name="partitialTypeName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetClass">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass GetClass (string typeName, bool deepSearchReferences, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue>
      <Parameters><Parameter Name="typeName" Type="System.String" /><Parameter Name="deepSearchReferences" Type="System.Boolean" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="typeName">To be added.</param><param name="deepSearchReferences">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetClassList">
      <MemberSignature Language="C#" Value="public string[] GetClassList (string subNameSpace, bool includeReferences, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Parameters><Parameter Name="subNameSpace" Type="System.String" /><Parameter Name="includeReferences" Type="System.Boolean" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="subNameSpace">To be added.</param><param name="includeReferences">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetNamespaceList">
      <MemberSignature Language="C#" Value="public string[] GetNamespaceList (string subNameSpace, bool includeReferences, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Parameters><Parameter Name="subNameSpace" Type="System.String" /><Parameter Name="includeReferences" Type="System.Boolean" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="subNameSpace">To be added.</param><param name="includeReferences">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="NamespaceExists">
      <MemberSignature Language="C#" Value="public bool NamespaceExists (string name, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Parameters><Parameter Name="name" Type="System.String" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="name">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SearchNamespace">
      <MemberSignature Language="C#" Value="public string SearchNamespace (MonoDevelop.Projects.Parser.IUsing iusing, string partitialNamespaceName, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialNamespaceName" Type="System.String" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="iusing">To be added.</param><param name="partitialNamespaceName">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass SearchType (MonoDevelop.Projects.Parser.IUsing iusing, string partitialTypeName, bool caseSensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue>
      <Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialTypeName" Type="System.String" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters>
      <Docs><param name="iusing">To be added.</param><param name="partitialTypeName">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass SearchType (string name, MonoDevelop.Projects.Parser.IClass callingClass, MonoDevelop.Projects.Parser.ICompilationUnit unit);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue>
      <Parameters><Parameter Name="name" Type="System.String" /><Parameter Name="callingClass" Type="MonoDevelop.Projects.Parser.IClass" /><Parameter Name="unit" Type="MonoDevelop.Projects.Parser.ICompilationUnit" /></Parameters>
      <Docs><param name="name">To be added.</param><param name="callingClass">To be added.</param><param name="unit">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetClassInheritanceTree">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable GetClassInheritanceTree (MonoDevelop.Projects.Parser.IClass cls);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Collections.IEnumerable</ReturnType></ReturnValue>
      <Parameters><Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" /></Parameters>
      <Docs><param name="cls">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetFileContents">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass[] GetFileContents (string fileName);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass[]</ReturnType></ReturnValue>
      <Parameters><Parameter Name="fileName" Type="System.String" /></Parameters>
      <Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetProjectContents">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass[] GetProjectContents ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass[]</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.ResolveResult Resolve (string expression, int caretLineNumber, int caretColumn, string fileName, string fileContent);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ResolveResult</ReturnType></ReturnValue>
      <Parameters><Parameter Name="expression" Type="System.String" /><Parameter Name="caretLineNumber" Type="System.Int32" /><Parameter Name="caretColumn" Type="System.Int32" /><Parameter Name="fileName" Type="System.String" /><Parameter Name="fileContent" Type="System.String" /></Parameters>
      <Docs><param name="expression">To be added.</param><param name="caretLineNumber">To be added.</param><param name="caretColumn">To be added.</param><param name="fileName">To be added.</param><param name="fileContent">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    
    
    
    <Member MemberName="ParseFile">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParseInformation ParseFile (MonoDevelop.Projects.Text.ITextFile file);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParseInformation</ReturnType></ReturnValue>
      <Parameters><Parameter Name="file" Type="MonoDevelop.Projects.Text.ITextFile" /></Parameters>
      <Docs><param name="file">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ResolveIdentifier">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.ILanguageItem ResolveIdentifier (string id, int caretLineNumber, int caretColumn, string fileName, string fileContent);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ILanguageItem</ReturnType></ReturnValue>
      <Parameters><Parameter Name="id" Type="System.String" /><Parameter Name="caretLineNumber" Type="System.Int32" /><Parameter Name="caretColumn" Type="System.Int32" /><Parameter Name="fileName" Type="System.String" /><Parameter Name="fileContent" Type="System.String" /></Parameters>
      <Docs><param name="id">To be added.</param><param name="caretLineNumber">To be added.</param><param name="caretColumn">To be added.</param><param name="fileName">To be added.</param><param name="fileContent">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetEnclosingLanguageItem">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.ILanguageItem GetEnclosingLanguageItem (int caretLineNumber, int caretColumn, MonoDevelop.Projects.Text.ITextFile file);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Parser.ILanguageItem</ReturnType></ReturnValue>
      <Parameters><Parameter Name="caretLineNumber" Type="System.Int32" /><Parameter Name="caretColumn" Type="System.Int32" /><Parameter Name="file" Type="MonoDevelop.Projects.Text.ITextFile" /></Parameters>
      <Docs><param name="caretLineNumber">To be added.</param><param name="caretColumn">To be added.</param><param name="file">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="CtrlSpace"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.LanguageItemCollection CtrlSpace (int caretLine, int caretColumn, string fileName);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.LanguageItemCollection</ReturnType></ReturnValue><Parameters><Parameter Name="caretLine" Type="System.Int32" /><Parameter Name="caretColumn" Type="System.Int32" /><Parameter Name="fileName" Type="System.String" /></Parameters><Docs><param name="caretLine">To be added.</param><param name="caretColumn">To be added.</param><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetClass"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass GetClass (string typeName, MonoDevelop.Projects.Parser.ReturnTypeList genericArguments);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue><Parameters><Parameter Name="typeName" Type="System.String" /><Parameter Name="genericArguments" Type="MonoDevelop.Projects.Parser.ReturnTypeList" /></Parameters><Docs><param name="typeName">To be added.</param><param name="genericArguments">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetClass"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass GetClass (string typeName, MonoDevelop.Projects.Parser.ReturnTypeList genericArguments, bool deepSearchReferences, bool caseSensitive);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue><Parameters><Parameter Name="typeName" Type="System.String" /><Parameter Name="genericArguments" Type="MonoDevelop.Projects.Parser.ReturnTypeList" /><Parameter Name="deepSearchReferences" Type="System.Boolean" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters><Docs><param name="typeName">To be added.</param><param name="genericArguments">To be added.</param><param name="deepSearchReferences">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetFileSpecialComments"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.TagCollection GetFileSpecialComments (string fileName);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.TagCollection</ReturnType></ReturnValue><Parameters><Parameter Name="fileName" Type="System.String" /></Parameters><Docs><param name="fileName">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetNamespaceContents"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.LanguageItemCollection GetNamespaceContents (string subNameSpace, bool includeReferences);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.LanguageItemCollection</ReturnType></ReturnValue><Parameters><Parameter Name="subNameSpace" Type="System.String" /><Parameter Name="includeReferences" Type="System.Boolean" /></Parameters><Docs><param name="subNameSpace">To be added.</param><param name="includeReferences">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetNamespaceContents"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.LanguageItemCollection GetNamespaceContents (string subNameSpace, bool includeReferences, bool caseSensitive);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.LanguageItemCollection</ReturnType></ReturnValue><Parameters><Parameter Name="subNameSpace" Type="System.String" /><Parameter Name="includeReferences" Type="System.Boolean" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters><Docs><param name="subNameSpace">To be added.</param><param name="includeReferences">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetSubclassesTree"><MemberSignature Language="C#" Value="public System.Collections.IEnumerable GetSubclassesTree (MonoDevelop.Projects.Parser.IClass cls, string[] namespaces);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Collections.IEnumerable</ReturnType></ReturnValue><Parameters><Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" /><Parameter Name="namespaces" Type="System.String[]" /></Parameters><Docs><param name="cls">To be added.</param><param name="namespaces">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="ParserDatabase"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IParserDatabase ParserDatabase { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IParserDatabase</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="SearchType"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass SearchType (MonoDevelop.Projects.Parser.IUsing iusing, string partitialTypeName, MonoDevelop.Projects.Parser.ReturnTypeList genericArguments);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue><Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialTypeName" Type="System.String" /><Parameter Name="genericArguments" Type="MonoDevelop.Projects.Parser.ReturnTypeList" /></Parameters><Docs><param name="iusing">To be added.</param><param name="partitialTypeName">To be added.</param><param name="genericArguments">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="SearchType"><MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass SearchType (MonoDevelop.Projects.Parser.IUsing iusing, string partitialTypeName, MonoDevelop.Projects.Parser.ReturnTypeList genericArguments, bool caseSensitive);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType></ReturnValue><Parameters><Parameter Name="iusing" Type="MonoDevelop.Projects.Parser.IUsing" /><Parameter Name="partitialTypeName" Type="System.String" /><Parameter Name="genericArguments" Type="MonoDevelop.Projects.Parser.ReturnTypeList" /><Parameter Name="caseSensitive" Type="System.Boolean" /></Parameters><Docs><param name="iusing">To be added.</param><param name="partitialTypeName">To be added.</param><param name="genericArguments">To be added.</param><param name="caseSensitive">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="UpdateDatabase"><MemberSignature Language="C#" Value="public void UpdateDatabase ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
