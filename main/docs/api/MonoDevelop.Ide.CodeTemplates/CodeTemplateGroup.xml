<Type Name="CodeTemplateGroup" FullName="MonoDevelop.Ide.CodeTemplates.CodeTemplateGroup">
  <TypeSignature Language="C#" Value="public class CodeTemplateGroup" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Ide</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTemplateGroup (string extensions);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="extensions" Type="System.String" /></Parameters>
      <Docs><param name="extensions">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; Extensions { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Templates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MonoDevelop.Ide.CodeTemplates.CodeTemplate&gt; Templates { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Collections.Generic.List&lt;MonoDevelop.Ide.CodeTemplates.CodeTemplate&gt;</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ExtensionStrings">
      <MemberSignature Language="C#" Value="public string[] ExtensionStrings { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String[]</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName=".ctor"><MemberSignature Language="C#" Value="public CodeTemplateGroup ();" /><MemberType>Constructor</MemberType><Parameters /><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="Node"><MemberSignature Language="C#" Value="public const string Node;" /><MemberType>Field</MemberType><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="Read"><MemberSignature Language="C#" Value="public static MonoDevelop.Ide.CodeTemplates.CodeTemplateGroup Read (System.Xml.XmlReader reader);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Ide.CodeTemplates.CodeTemplateGroup</ReturnType></ReturnValue><Parameters><Parameter Name="reader" Type="System.Xml.XmlReader" /></Parameters><Docs><param name="reader">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="Write"><MemberSignature Language="C#" Value="public void Write (System.Xml.XmlWriter writer);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="writer" Type="System.Xml.XmlWriter" /></Parameters><Docs><param name="writer">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
