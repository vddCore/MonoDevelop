<Type Name="DataType" FullName="MonoDevelop.Projects.Serialization.DataType">
  <TypeSignature Language="C#" Value="public abstract class DataType" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataType (Type type);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="type" Type="System.Type" /></Parameters>
      <Docs><param name="type">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="FindPropertyAttribute">
      <MemberSignature Language="C#" Value="protected MonoDevelop.Projects.Serialization.ItemPropertyAttribute FindPropertyAttribute (object[] attributes, int scope);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Serialization.ItemPropertyAttribute</ReturnType></ReturnValue>
      <Parameters><Parameter Name="attributes" Type="System.Object[]" /><Parameter Name="scope" Type="System.Int32" /></Parameters>
      <Docs><param name="attributes">To be added.</param><param name="scope">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract MonoDevelop.Projects.Serialization.DataNode Serialize (MonoDevelop.Projects.Serialization.SerializationContext serCtx, object mapData, object value);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Serialization.DataNode</ReturnType></ReturnValue>
      <Parameters><Parameter Name="serCtx" Type="MonoDevelop.Projects.Serialization.SerializationContext" /><Parameter Name="mapData" Type="System.Object" /><Parameter Name="value" Type="System.Object" /></Parameters>
      <Docs><param name="serCtx">To be added.</param><param name="mapData">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (MonoDevelop.Projects.Serialization.SerializationContext serCtx, object mapData, MonoDevelop.Projects.Serialization.DataNode data);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Object</ReturnType></ReturnValue>
      <Parameters><Parameter Name="serCtx" Type="MonoDevelop.Projects.Serialization.SerializationContext" /><Parameter Name="mapData" Type="System.Object" /><Parameter Name="data" Type="MonoDevelop.Projects.Serialization.DataNode" /></Parameters>
      <Docs><param name="serCtx">To be added.</param><param name="mapData">To be added.</param><param name="data">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual void Deserialize (MonoDevelop.Projects.Serialization.SerializationContext serCtx, object mapData, MonoDevelop.Projects.Serialization.DataNode data, object valueInstance);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="serCtx" Type="MonoDevelop.Projects.Serialization.SerializationContext" /><Parameter Name="mapData" Type="System.Object" /><Parameter Name="data" Type="MonoDevelop.Projects.Serialization.DataNode" /><Parameter Name="valueInstance" Type="System.Object" /></Parameters>
      <Docs><param name="serCtx">To be added.</param><param name="mapData">To be added.</param><param name="data">To be added.</param><param name="valueInstance">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected MonoDevelop.Projects.Serialization.DataContext Context { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Projects.Serialization.DataContext</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public Type ValueType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Type</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="IsSimpleType">
      <MemberSignature Language="C#" Value="public abstract bool IsSimpleType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CanCreateInstance">
      <MemberSignature Language="C#" Value="public abstract bool CanCreateInstance { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CanReuseInstance">
      <MemberSignature Language="C#" Value="public abstract bool CanReuseInstance { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="CreateInstance"><MemberSignature Language="C#" Value="public virtual object CreateInstance (MonoDevelop.Projects.Serialization.SerializationContext serCtx, MonoDevelop.Projects.Serialization.DataNode data);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Object</ReturnType></ReturnValue><Parameters><Parameter Name="serCtx" Type="MonoDevelop.Projects.Serialization.SerializationContext" /><Parameter Name="data" Type="MonoDevelop.Projects.Serialization.DataNode" /></Parameters><Docs><param name="serCtx">To be added.</param><param name="data">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="GetMapData"><MemberSignature Language="C#" Value="protected virtual object GetMapData (object[] attributes, int scope);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Object</ReturnType></ReturnValue><Parameters><Parameter Name="attributes" Type="System.Object[]" /><Parameter Name="scope" Type="System.Int32" /></Parameters><Docs><param name="attributes">To be added.</param><param name="scope">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
