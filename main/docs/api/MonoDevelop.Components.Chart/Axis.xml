<Type Name="Axis" FullName="MonoDevelop.Components.Chart.Axis">
  <TypeSignature Language="C#" Value="public abstract class Axis" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Components</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis (bool showLabels);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="showLabels" Type="System.Boolean" /></Parameters>
      <Docs><param name="showLabels">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetTickEnumerator">
      <MemberSignature Language="C#" Value="public MonoDevelop.Components.Chart.TickEnumerator GetTickEnumerator (double minTickStep);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Components.Chart.TickEnumerator</ReturnType></ReturnValue>
      <Parameters><Parameter Name="minTickStep" Type="System.Double" /></Parameters>
      <Docs><param name="minTickStep">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CreateTickEnumerator">
      <MemberSignature Language="C#" Value="protected abstract MonoDevelop.Components.Chart.TickEnumerator CreateTickEnumerator (double minTickStep);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Components.Chart.TickEnumerator</ReturnType></ReturnValue>
      <Parameters><Parameter Name="minTickStep" Type="System.Double" /></Parameters>
      <Docs><param name="minTickStep">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetValueLabel">
      <MemberSignature Language="C#" Value="public virtual string GetValueLabel (double value);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Parameters><Parameter Name="value" Type="System.Double" /></Parameters>
      <Docs><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="TickSize">
      <MemberSignature Language="C#" Value="public int TickSize { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="ShowLabels">
      <MemberSignature Language="C#" Value="public bool ShowLabels { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
