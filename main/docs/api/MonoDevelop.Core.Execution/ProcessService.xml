<Type Name="ProcessService" FullName="MonoDevelop.Core.Execution.ProcessService">
  <TypeSignature Language="C#" Value="public class ProcessService : MonoDevelop.Core.AbstractService" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Core</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Core.AbstractService</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessService ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartProcess">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, EventHandler exited);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue>
      <Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters>
      <Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartProcess">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, MonoDevelop.Core.Execution.ProcessEventHandler outputStreamChanged, MonoDevelop.Core.Execution.ProcessEventHandler errorStreamChanged);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue>
      <Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="outputStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="errorStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /></Parameters>
      <Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="outputStreamChanged">To be added.</param><param name="errorStreamChanged">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartProcess">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, System.IO.TextWriter outWriter, System.IO.TextWriter errorWriter, EventHandler exited);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue>
      <Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="outWriter" Type="System.IO.TextWriter" /><Parameter Name="errorWriter" Type="System.IO.TextWriter" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters>
      <Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="outWriter">To be added.</param><param name="errorWriter">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartProcess">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, MonoDevelop.Core.Execution.ProcessEventHandler outputStreamChanged, MonoDevelop.Core.Execution.ProcessEventHandler errorStreamChanged, EventHandler exited);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue>
      <Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="outputStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="errorStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters>
      <Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="outputStreamChanged">To be added.</param><param name="errorStreamChanged">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="StartConsoleProcess">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartConsoleProcess (string command, string arguments, string workingDirectory, MonoDevelop.Core.Execution.IConsole console, EventHandler exited);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue>
      <Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="console" Type="MonoDevelop.Core.Execution.IConsole" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters>
      <Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="console">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="GetDefaultExecutionHandler">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.IExecutionHandler GetDefaultExecutionHandler (string platformId);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.IExecutionHandler</ReturnType></ReturnValue>
      <Parameters><Parameter Name="platformId" Type="System.String" /></Parameters>
      <Docs><param name="platformId">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CreateExternalProcessObject">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.RemoteProcessObject CreateExternalProcessObject (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.RemoteProcessObject</ReturnType></ReturnValue>
      <Parameters><Parameter Name="type" Type="System.Type" /></Parameters>
      <Docs><param name="type">Type of the object to create. It must be a subclass of <see cref="T:MonoDevelop.Core.Execution.RemoteProcessObject" />.</param><summary>Creates an object in an external process.</summary><returns>A proxy to the remote object.</returns><remarks>The returned object must be explicitely disposed with a call to <see cref="M:MonoDevelop.Core.Execution.RemoteProcessObject.Dispose" />.</remarks></Docs>
    </Member>
    <Member MemberName="CreateExternalProcessObject">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.RemoteProcessObject CreateExternalProcessObject (Type type, bool shared);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Core.Execution.RemoteProcessObject</ReturnType></ReturnValue>
      <Parameters><Parameter Name="type" Type="System.Type" /><Parameter Name="shared" Type="System.Boolean" /></Parameters>
      <Docs><param name="type">Type of the object to create. It must be a subclass of <see cref="T:MonoDevelop.Core.Execution.RemoteProcessObject" />.</param><param name="shared">If set to 'true', it will try to reuse an existing external process.</param><summary>Creates an object in an external process.</summary><returns>A proxy to the remote object.</returns><remarks>The returned object must be explicitely disposed with a call to <see cref="M:MonoDevelop.Core.Execution.RemoteProcessObject.Dispose" />.</remarks></Docs>
    </Member>
    
  <Member MemberName="CreateExternalProcessObject"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.RemoteProcessObject CreateExternalProcessObject (string assemblyPath, string typeName, bool shared, string[] requiredAddins);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.RemoteProcessObject</ReturnType></ReturnValue><Parameters><Parameter Name="assemblyPath" Type="System.String" /><Parameter Name="typeName" Type="System.String" /><Parameter Name="shared" Type="System.Boolean" /><Parameter Name="requiredAddins" Type="System.String[]"><Attributes><Attribute><AttributeName>System.ParamArray</AttributeName></Attribute></Attributes></Parameter></Parameters><Docs><param name="assemblyPath">To be added.</param><param name="typeName">To be added.</param><param name="shared">To be added.</param><param name="requiredAddins">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="CreateProcessStartInfo"><MemberSignature Language="C#" Value="public System.Diagnostics.ProcessStartInfo CreateProcessStartInfo (string command, string arguments, string workingDirectory, bool redirectStandardInput);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType></ReturnValue><Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="redirectStandardInput" Type="System.Boolean" /></Parameters><Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="redirectStandardInput">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="EnvironmentVariableOverrides"><MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; EnvironmentVariableOverrides { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="ExternalProcessRemotingChannel"><MemberSignature Language="C#" Value="public string ExternalProcessRemotingChannel { set; get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.String</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="StartConsoleProcess"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartConsoleProcess (string command, string arguments, string workingDirectory, System.Collections.Generic.IDictionary&lt;string,string&gt; environmentVariables, MonoDevelop.Core.Execution.IConsole console, EventHandler exited);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue><Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="environmentVariables" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" /><Parameter Name="console" Type="MonoDevelop.Core.Execution.IConsole" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters><Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="environmentVariables">To be added.</param><param name="console">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="StartProcess"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (System.Diagnostics.ProcessStartInfo startInfo, MonoDevelop.Core.Execution.ProcessEventHandler outputStreamChanged, MonoDevelop.Core.Execution.ProcessEventHandler errorStreamChanged, EventHandler exited);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue><Parameters><Parameter Name="startInfo" Type="System.Diagnostics.ProcessStartInfo" /><Parameter Name="outputStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="errorStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters><Docs><param name="startInfo">To be added.</param><param name="outputStreamChanged">To be added.</param><param name="errorStreamChanged">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="StartProcess"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (System.Diagnostics.ProcessStartInfo startInfo, System.IO.TextWriter outWriter, System.IO.TextWriter errorWriter, EventHandler exited);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue><Parameters><Parameter Name="startInfo" Type="System.Diagnostics.ProcessStartInfo" /><Parameter Name="outWriter" Type="System.IO.TextWriter" /><Parameter Name="errorWriter" Type="System.IO.TextWriter" /><Parameter Name="exited" Type="System.EventHandler" /></Parameters><Docs><param name="startInfo">To be added.</param><param name="outWriter">To be added.</param><param name="errorWriter">To be added.</param><param name="exited">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="StartProcess"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, MonoDevelop.Core.Execution.ProcessEventHandler outputStreamChanged, MonoDevelop.Core.Execution.ProcessEventHandler errorStreamChanged, EventHandler exited, bool redirectStandardInput);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue><Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="outputStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="errorStreamChanged" Type="MonoDevelop.Core.Execution.ProcessEventHandler" /><Parameter Name="exited" Type="System.EventHandler" /><Parameter Name="redirectStandardInput" Type="System.Boolean" /></Parameters><Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="outputStreamChanged">To be added.</param><param name="errorStreamChanged">To be added.</param><param name="exited">To be added.</param><param name="redirectStandardInput">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="StartProcess"><MemberSignature Language="C#" Value="public MonoDevelop.Core.Execution.ProcessWrapper StartProcess (string command, string arguments, string workingDirectory, System.IO.TextWriter outWriter, System.IO.TextWriter errorWriter, EventHandler exited, bool redirectStandardInput);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>MonoDevelop.Core.Execution.ProcessWrapper</ReturnType></ReturnValue><Parameters><Parameter Name="command" Type="System.String" /><Parameter Name="arguments" Type="System.String" /><Parameter Name="workingDirectory" Type="System.String" /><Parameter Name="outWriter" Type="System.IO.TextWriter" /><Parameter Name="errorWriter" Type="System.IO.TextWriter" /><Parameter Name="exited" Type="System.EventHandler" /><Parameter Name="redirectStandardInput" Type="System.Boolean" /></Parameters><Docs><param name="command">To be added.</param><param name="arguments">To be added.</param><param name="workingDirectory">To be added.</param><param name="outWriter">To be added.</param><param name="errorWriter">To be added.</param><param name="exited">To be added.</param><param name="redirectStandardInput">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>Class that provides several utility methods related to process operations.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
