<Type Name="TaskService" FullName="MonoDevelop.Ide.Tasks.TaskService">
  <TypeSignature Language="C#" Value="public class TaskService : MonoDevelop.Core.Gui.GuiSyncObject" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Ide</AssemblyName>
    <AssemblyVersion>0.18.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Core.Gui.GuiSyncObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskService ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="TaskAdded">
      <MemberSignature Language="C#" Value="public event MonoDevelop.Ide.Tasks.TaskEventHandler TaskAdded;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>MonoDevelop.Ide.Tasks.TaskEventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="CompilerOutputChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CompilerOutputChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    
    
    <Member MemberName="OnCompilerOutputChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCompilerOutputChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="System.EventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="OnTaskAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnTaskAdded (MonoDevelop.Ide.Tasks.TaskEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="e" Type="MonoDevelop.Ide.Tasks.TaskEventArgs" /></Parameters>
      <Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    
    <Member MemberName="Tasks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.Task&gt; Tasks { get; };" />
      <MemberType>Property</MemberType>
      
      <ReturnValue><ReturnType>System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.Task&gt;</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    
    
    
    <Member MemberName="SomethingWentWrong">
      <MemberSignature Language="C#" Value="public bool SomethingWentWrong { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="CompilerOutput">
      <MemberSignature Language="C#" Value="public string CompilerOutput { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
  <Member MemberName="Add"><MemberSignature Language="C#" Value="public void Add (MonoDevelop.Ide.Tasks.Task task);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="task" Type="MonoDevelop.Ide.Tasks.Task" /></Parameters><Docs><param name="task">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="AddRange"><MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;MonoDevelop.Ide.Tasks.Task&gt; tasks);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable&lt;MonoDevelop.Ide.Tasks.Task&gt;" /></Parameters><Docs><param name="tasks">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="AddUserTasksRange"><MemberSignature Language="C#" Value="public void AddUserTasksRange (System.Collections.Generic.IEnumerable&lt;MonoDevelop.Ide.Tasks.UserTask&gt; tasks);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable&lt;MonoDevelop.Ide.Tasks.UserTask&gt;" /></Parameters><Docs><param name="tasks">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="Clear"><MemberSignature Language="C#" Value="public void Clear ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="ClearExceptCommentTasks"><MemberSignature Language="C#" Value="public void ClearExceptCommentTasks ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="CommentTasks"><MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.Task&gt; CommentTasks { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.Task&gt;</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="ErrorsCount"><MemberSignature Language="C#" Value="public int ErrorsCount { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="HasCriticalErrors"><MemberSignature Language="C#" Value="public bool HasCriticalErrors (bool treatWarningsAsErrors);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue><Parameters><Parameter Name="treatWarningsAsErrors" Type="System.Boolean" /></Parameters><Docs><param name="treatWarningsAsErrors">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs></Member><Member MemberName="MessagesCount"><MemberSignature Language="C#" Value="public int MessagesCount { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnTaskChanged"><MemberSignature Language="C#" Value="protected virtual void OnTaskChanged (MonoDevelop.Ide.Tasks.TaskEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Ide.Tasks.TaskEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnTaskRemoved"><MemberSignature Language="C#" Value="protected virtual void OnTaskRemoved (MonoDevelop.Ide.Tasks.TaskEventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="MonoDevelop.Ide.Tasks.TaskEventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="OnTasksCleared"><MemberSignature Language="C#" Value="protected virtual void OnTasksCleared (EventArgs e);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="e" Type="System.EventArgs" /></Parameters><Docs><param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="Remove"><MemberSignature Language="C#" Value="public void Remove (MonoDevelop.Ide.Tasks.Task task);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="task" Type="MonoDevelop.Ide.Tasks.Task" /></Parameters><Docs><param name="task">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="ShowErrors"><MemberSignature Language="C#" Value="public void ShowErrors ();" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters /><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="TaskChanged"><MemberSignature Language="C#" Value="public event MonoDevelop.Ide.Tasks.TaskEventHandler TaskChanged;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Ide.Tasks.TaskEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="TaskCount"><MemberSignature Language="C#" Value="public int TaskCount { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="TaskRemoved"><MemberSignature Language="C#" Value="public event MonoDevelop.Ide.Tasks.TaskEventHandler TaskRemoved;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>MonoDevelop.Ide.Tasks.TaskEventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="TasksCleared"><MemberSignature Language="C#" Value="public event EventHandler TasksCleared;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="UpdateCommentTags"><MemberSignature Language="C#" Value="public void UpdateCommentTags (string fileName, MonoDevelop.Projects.Parser.TagCollection tagComments);" /><MemberType>Method</MemberType><ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue><Parameters><Parameter Name="fileName" Type="System.String" /><Parameter Name="tagComments" Type="MonoDevelop.Projects.Parser.TagCollection" /></Parameters><Docs><param name="fileName">To be added.</param><param name="tagComments">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="UserTasks"><MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.UserTask&gt; UserTasks { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Collections.Generic.List&lt;MonoDevelop.Ide.Tasks.UserTask&gt;</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member><Member MemberName="UserTasksChanged"><MemberSignature Language="C#" Value="public event EventHandler UserTasksChanged;" /><MemberType>Event</MemberType><ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue><Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs></Member><Member MemberName="WarningsCount"><MemberSignature Language="C#" Value="public int WarningsCount { get; };" /><MemberType>Property</MemberType><ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue><Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs></Member></Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
