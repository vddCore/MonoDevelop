Some things that still need to be done in AnalyzerCore:

* LOTS of rules - both generic .NET (for ICompilationUnit) and 
  using an adaptor that would invoke the new C# parser.

* A pad, for viewing the rules list more directly.

* Support for configuring which rules are used, via additional 
  filters when building the analysis tree.

* A GUI for configuring the rules used.

* Configurable rules. Rules should be able to specify a configuration 
  object type in the addins file, and a GUI panel for editing the values.
  A more specialized analysis tree nodes could be used for rules with
  options, which would be Func<TIn,TOptions,TOut>

* A scheduler for analysis jobs that would automatically discard outdated 
  queued jobs when a newer job comes in.

* UserVisibleStringCollection type and a rule to spellcheck it, so anything
  can output this node to generate spellchecking results.


Some things that would be nice, but aren't so immediately important:

* Profiling, both CPU and memory.

* Parallelize the analysis trees - should be quite easy.

* Clean up the type handling - use more specialized analysis tree nodes
  to avoid the wrapper DynamicMethods and the casts they do.

* Commands to suppress individual results, persisted in suppression files.

* Analysis on demand, with a results list. This could easily process all files 
  in a project or sln.

* Support for specifying rule priorities and using multiple analyser 
  trees at different frequencies for one document, in order to run 
  cheaper or more userful rules more frequently.
  
* Project-wide on the fly analysis.

* Solution-wide on the fly analysis.

* Rules to analyze project settings.

